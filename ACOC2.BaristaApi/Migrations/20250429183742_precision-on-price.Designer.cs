// <auto-generated />
using ACOC2.BaristaApi._3_Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ACOC2.BaristaApi.Migrations
{
    [DbContext(typeof(BaristaDbContext))]
    [Migration("20250429183742_precision-on-price")]
    partial class PrecisionOnPrice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ACOC2.BaristaApi._3_Data.Entities.BrewRecipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrewTimeSeconds")
                        .HasColumnType("int");

                    b.Property<int>("CoffeeProductId")
                        .HasColumnType("int");

                    b.Property<int>("TemperatureCelsius")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoffeeProductId")
                        .IsUnique();

                    b.ToTable("BrewRecipes");
                });

            modelBuilder.Entity("ACOC2.BaristaApi._3_Data.Entities.CoffeeProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("CoffeeProducts");
                });

            modelBuilder.Entity("ACOC2.BaristaApi._3_Data.Entities.BrewRecipe", b =>
                {
                    b.HasOne("ACOC2.BaristaApi._3_Data.Entities.CoffeeProduct", "CoffeeProduct")
                        .WithOne("BrewRecipe")
                        .HasForeignKey("ACOC2.BaristaApi._3_Data.Entities.BrewRecipe", "CoffeeProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoffeeProduct");
                });

            modelBuilder.Entity("ACOC2.BaristaApi._3_Data.Entities.CoffeeProduct", b =>
                {
                    b.Navigation("BrewRecipe");
                });
#pragma warning restore 612, 618
        }
    }
}
